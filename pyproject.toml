[project]
name = "bedrock-claude-streamlit-app"
version = "0.1.0"
description = "bedrock claude streamlit app"
authors = [
    { name = "limbo", email = "pythonsuper@gmail.com" }
]
dependencies = [
    "boto3>=1.34.69",
    "langchain>=0.1.13",
    "streamlit>=1.32.2",
    "python-dotenv>=1.0.1",
]
readme = "README.md"
requires-python = ">= 3.8"

[project.scripts]
"app" = "bedrock_claude_streamlit_app:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.rye]
managed = true
dev-dependencies = [
    "ruff>=0.3.4",
    "isort>=5.13.2",
    "pyright>=1.1.355",
    "mypy>=1.9.0",
]


[tool.rye.scripts]
format = { chain = [
  "format:ruff",
  "fix:ruff",
]}
"format:black" = "black ."
"format:ruff" = "ruff format"
"format:isort" = "isort ."

"lint" = { chain = [
  "check:ruff",
  "typecheck",
]}
"check:ruff" = "ruff ."
"fix:ruff" = "ruff --fix ."

#typecheck = { chain = [
#  "typecheck:pyright",
#  "typecheck:mypy"
#]}
#"typecheck:pyright" = "pyright"
#"typecheck:mypy" = "mypy --ignore-missing-imports ."

[tool.black]
line-length = 120
target-version = ["py38"]

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.build.targets.wheel]
packages = ["src/bedrock_claude_streamlit_app"]

[tool.pyright]
# this enables practically every flag given by pyright.
# there are a couple of flags that are still disabled by
# default in strict mode as they are experimental and niche.
typeCheckingMode = "strict"
pythonVersion = "3.8"

exclude = [
    "_dev",
    ".venv",
    ".nox",
]

reportImplicitOverride = true

reportImportCycles = false
reportPrivateUsage = false

[tool.ruff]
line-length = 120
output-format = "grouped"
target-version = "py38"
select = [
  # isort
  "I",
  # bugbear rules
  "B",
  # remove unused imports
  "F401",
  # bare except statements
  "E722",
  # unused arguments
  "ARG",
  # print statements
  "T201",
  "T203",
  # misuse of typing.TYPE_CHECKING
  "TCH004"
]
ignore = [
  # mutable defaults
  "B006",
]
unfixable = [
  # disable auto fix for print statements
  "T201",
  "T203",
]
ignore-init-module-imports = true

[tool.ruff.format]
docstring-code-format = true

[tool.ruff.lint.isort]
length-sort = true
length-sort-straight = true
combine-as-imports = true
extra-standard-library = ["typing_extensions"]

[tool.ruff.per-file-ignores]
"tests/**.py" = ["T201", "T203"]
"examples/**.py" = ["T201", "T203"]
